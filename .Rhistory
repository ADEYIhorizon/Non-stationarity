#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "RCP_IDF_new.xlsx")
H <- read.csv("./Data/Subdaily data/RCP85_sub_daily2_update.csv")
model_spec <- read.csv("model RCP85.csv")
level_prep <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
if (model_spec == 1){
#Model 1
GEV <- fevd(col, H, units="mm")
}
else if (model_spec == 2){
#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "RCP85_IDF_new.xlsx")
H <- read.csv("./Data/Subdaily data/SSP245_sub_daily_update.csv")
model_spec <- read.csv("model SSP245.csv")
level_prep <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
if (model_spec == 1){
#Model 1
GEV <- fevd(col, H, units="mm")
}
else if (model_spec == 2){
#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "SSP245_IDF_new.xlsx")
H <- read.csv("./Data/Subdaily data/SSP245_sub_daily_update.csv")
model_spec <- read.csv("model SSP245.csv")
level_prep <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
if (model_spec == 1){
#Model 1
GEV <- fevd(col, H, units="mm")
}
else if (model_spec == 2){
#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "SSP245_IDF_new.xlsx")
model_spec <- read.csv("model SSP585.csv")
H <- read.csv("./Data/Subdaily data/SSP585_sub_daily_update.csv")
model_spec <- read.csv("model SSP585.csv")
level_prep <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
if (model_spec == 1){
#Model 1
GEV <- fevd(col, H, units="mm")
}
else if (model_spec == 2){
#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "SSP585_IDF_new.xlsx")
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
level_prep_hist <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
#Model 1
GEV <- fevd(col, H, units="mm")
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
return(quant)
}
H <- read.csv("./AMS_data.csv")
model_spec <- read.csv("model SSP585.csv")
level_prep_hist <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
#Model 1
GEV <- fevd(col, H, units="mm")
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
level_prep_hist <- function(col = H[[i+1]], H=H){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
#Model 1
GEV <- fevd(col, H, units="mm")
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
level_prep_hist <- function(col = H[[i+1]], H=H){
col <- col
#Model 1
GEV <- fevd(col, H, units="mm")
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
for (i in 1:48) {
print(i)
ret_lev <- level_prep_hist(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
return(PTOT_MODEL_RCP8.5_5)
level_prep_hist <- function(col = H[[i+1]], H=H){
col <- col
#Model 1
GEV <- fevd(col, H, units="mm")
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
return(PTOT_MODEL_RCP8.5_5)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep_hist(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
for (i in 3:50) {
print(i)
ret_lev <- level_prep_hist(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
View(ret_lev)
ret_lev(1,1)
ret_lev[1,1]
View(ret_lev)
ret_lev[1,]
ret_lev[,1]
for (i in 3:50) {
print(i)
ret_lev <- level_prep_hist(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev[,1])
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "IDF_Historical.xlsx")
H <- read.csv("./AMS_data.csv")
model_spec <- read.csv("model SSP585.csv")
level_prep_hist <- function(col = H[[i]], H=H){
col <- col
#Model 1
GEV <- fevd(col, H, units="mm")
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
return(PTOT_MODEL_RCP8.5_5)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 3:50) {
print(i)
ret_lev <- level_prep_hist(col = H[[i]], H=H)
delta_df <- rbind(delta_df, ret_lev[,1])
print("done")
}
colnames(delta_df) <- c("2", "5", "10", "20", "25", "50", "100")
write_xlsx(delta_df, path = "IDF_Historical.xlsx")
write_xlsx(delta_df, path = "IDF_Historical1.xlsx")
install.packages("C:/Users/user/Downloads/HyetosMinute_2.2.zip", repos = NULL, type = "win.binary")
library(HyetosMinute)
install.packages("ggplot2")
library(HyetosMinute)
install.packages("ggplots")
install.packages("C:/Users/user/Downloads/gplots_3.1.3.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/user/Downloads/gplots_3.1.3.zip", repos = NULL, type = "win.binary")
install.packages("remotes")
remotes::install_github("johnmyleswhite/ggplots"
install.packages("C:/Users/user/Downloads/gplots_3.1.3.zip", repos = NULL, type = "win.binary")
remotes::install_github("johnmyleswhite/ggplots")
library(HyetosMinute)
library(gplots)
install.packages("gtools")
library(HyetosMinute)
install.packages("gplots")
library(HyetosMinute)
library(HyetosMinute)
install.packages("gdata")
library(HyetosMinute)
library(HyetosMinute)
library(HyetosMinute)
# To load the data set "HistDailyData" use
data(HistDailyData)
View(HistDailyData)
# To export the daily rainfall depths of "HistDailyData"
# data set in the chosen working directory use
write.table(HistDailyData,file="HistDailyData.txt",sep="\t",
quote=FALSE,row.names=FALSE,col.names=FALSE)
# To disaggregate the daily rainfall depths of first 5 clusters of wet days use
ex21 <- DisagSimul(TimeScale=1,BLpar=list(lambda=0.569748,phi=0.048387,kappa=0.5996395,
alpha=7.2933199,v=0.052517913,mx=30.4825,sxmx=32.391/30.4825),CellIntensityProp=list(Weibull=FALSE,
iota=NA),RepetOpt=list(DistAllowed=0.1,FacLevel1Rep=20,MinLevel1Rep=50,
TotalRepAllowed=5000),NumOfSequences=5,Statistics=list(print=TRUE,plot=FALSE),
ExportSynthData=list(exp=TRUE,FileContent=c("AllDays"),file="HistDailyData_Disag.txt"),
ImportHistData=list(file="HistDailyData.txt",na.values="NA",FileContent=c("AllDays"),
DaysPerSeason=30),PlotHyetographs=FALSE,RandSeed=5)
# To load the data set "HistDailyData2" use
data(HistDailyData2)
# To export the daily rainfall depths of "HistDailyData2" data set
# in the chosen working directory use
write.table(HistDailyData2,file="HistDailyData2.txt",sep="\t",
quote=FALSE,row.names=FALSE,col.names=FALSE)
# To disaggregate the daily rainfall depths of first 5 clusters of wet days use
x22 <- DisagSimul(TimeScale=1/6,BLpar=list(lambda=0.9396,phi=0.0568,kappa=1.05819,
alpha=2.69519,v=0.006282916666,mx=24.33408,sxmx=1),CellIntensityProp=list(Weibull=FALSE,
iota=NA),RepetOpt=list(DistAllowed=0.1,FacLevel1Rep=20,MinLevel1Rep=50,
TotalRepAllowed=5000),NumOfSequences=5,Statistics=list(print=TRUE,plot=FALSE),
ExportSynthData=list(exp=TRUE,FileContent=c("WetDays"),file="HistDailyData2_Disag.txt"),
ImportHistData=list(file="HistDailyData2.txt",na.values="NA",
FileContent=c("WetDays"),DaysPerSeason=31),
PlotHyetographs=FALSE,RandSeed=5)
H <- read.csv("./Data/Subdaily data/SSP585_sub_daily_update.csv")
model_spec <- read.csv("model SSP585.csv")
level_prep <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
if (model_spec == 1){
#Model 1
GEV <- fevd(col, H, units="mm")
}
else if (model_spec == 2){
#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2-year", "5-year", "10-year", "20-year", "25-year", "50-year", "100-year")
write_xlsx(delta_df, path = "SSP585_IDF_new2.xlsx")
H <- read.csv("./Data/Subdaily data/SSP245_sub_daily_update.csv")
model_spec <- read.csv("model SSP585.csv")
level_prep <- function(col = H[[i+1]], H=H, model_spec = model_spec[i,2]){
col <- col
cov <- matrix(ncol=2,nrow=nrow(H))
cov[,1] <- H$Years
if (model_spec == 1){
#Model 1
GEV <- fevd(col, H, units="mm")
}
else if (model_spec == 2){
#Model II
GEV <- fevd(col, H,location.fun = ~ cov[,1])
}
else if (model_spec == 3){
#Model III
GEV <- fevd(col,H,location.fun = ~ cov[,1], scale.fun = ~cov[,1])
}
else if (model_spec == 4){
#Model IV
GEV <- fevd(col,H,location.fun = ~ cov[,1],scale.fun = ~ cov[,1],
use.phi = TRUE)
}
else if (model_spec == 5){
#Model V
GEV <- fevd(col,H,scale.fun = ~ cov[,1])
}
else {
#Model VI
GEV <- fevd(col,H, scale.fun = ~ cov[,1],use.phi = TRUE)
}
RP <- c(2,5,10,20,25,50,100)
PTOT_MODEL_RCP8.5_5 <- erlevd(GEV, period=RP)
quant <- c(quantile(PTOT_MODEL_RCP8.5_5[1,],0.95),quantile(PTOT_MODEL_RCP8.5_5[2,],0.95),quantile(PTOT_MODEL_RCP8.5_5[3,],0.95),quantile(PTOT_MODEL_RCP8.5_5[4,],0.95),quantile(PTOT_MODEL_RCP8.5_5[5,],0.95),quantile(PTOT_MODEL_RCP8.5_5[6,],0.95),quantile(PTOT_MODEL_RCP8.5_5[7,],0.95))
return(quant)
}
#initialize dataframe
# Create a matrix filled with 1s
matrix_with_ones <- matrix(1, nrow = 1, ncol = 7)
delta_df <- data.frame(matrix_with_ones)
for (i in 1:48) {
print(i)
ret_lev <- level_prep(col = H[[i+1]], H=H, model_spec = model_spec[i,2])
delta_df <- rbind(delta_df, ret_lev)
print("done")
}
colnames(delta_df) <- c("2-year", "5-year", "10-year", "20-year", "25-year", "50-year", "100-year")
write_xlsx(delta_df, path = "SSP245_IDF_new2.xlsx")
